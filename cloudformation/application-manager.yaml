AWSTemplateFormatVersion: "2010-09-09"
Description: "Launch Application Manager EC2 instance from a custom AMI with SSM access"

Parameters:

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: "Select your EC2 KeyPair to SSH into the instance"

  InstanceType:
    Type: String
    Default: t3.micro
    AllowedValues:
    - t3.micro
    - t2.micro
    Description: "EC2 instance type for the Application Manager"

  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: "VPC to launch the instance into"

  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: "Subnet within the VPC to launch the instance into"

Resources:

  ApplicationManagerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: application-manager-ec2-role
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Principal:
            Service: ec2.amazonaws.com
          Action: sts:AssumeRole
      Policies:
      - PolicyName: ReadDockerTokenSSM
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
          - Effect: Allow
            Action:
            - ssm:GetParameter
            - ssm:GetParameters
            Resource: arn:aws:ssm:eu-central-1:049125108544:parameter/application-manager/docker-token

  ApplicationManagerProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
      - !Ref ApplicationManagerRole

  ApplicationManagerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Security Group for Application Manager"
      VpcId: !Ref VpcId
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 8000
        ToPort: 8000
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      Tags:
      - Key: Name
        Value: application-manager-sg

  ApplicationManagerInstance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: ami-068e657c26a322e1b
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      SubnetId: !Ref SubnetId
      IamInstanceProfile: !Ref ApplicationManagerProfile
      SecurityGroupIds:
      - !Ref ApplicationManagerSG
      Tags:
      - Key: Name
        Value: application-manager

Outputs:

  PublicIP:
    Description: "Public IP address of the EC2 instance"
    Value: !GetAtt ApplicationManagerInstance.PublicIp

  SSHCommand:
    Description: "Example SSH command"
    Value: !Sub "ssh -i ~/.ssh/${KeyName}.pem ubuntu@${ApplicationManagerInstance.PublicIp}"

  AppURL:
    Description: Application Manager web UI (port 8000)
    Value: !Sub "http://${ApplicationManagerInstance.PublicIp}:8000"

  HealthcheckURL:
    Description: Healthcheck for the model server (port 8080)
    Value: !Sub "http://${ApplicationManagerInstance.PublicIp}:8080/v2/health/ready"
